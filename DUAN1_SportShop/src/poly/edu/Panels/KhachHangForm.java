/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package poly.edu.Panels;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.Random;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;
import poly.edu.Model.HoaDon;
import poly.edu.Model.KhachHang;
import poly.edu.Model.TKHoaDon;
import poly.edu.service.KhachHangServices;

/**
 *
 * @author Admin
 */
public class KhachHangForm extends javax.swing.JPanel {

    ArrayList<KhachHang> lst = new ArrayList<>();
    public final KhachHangServices khsv = new KhachHangServices();
    DefaultTableModel model = new DefaultTableModel();
    int row = -1;

    /**
     * Creates new form KhachHangForm
     */
    public KhachHangForm() {
        initComponents();
        setOpaque(false);
        model = (DefaultTableModel) tblThongTinKhachHang.getModel();
        FillTable();
        //UpdateStatus();
        //FillLS();
        TableWithButton();
        capnhat.setVisible(false);
        Thongtinkh.setVisible(false);
        getData();
        Random random = new Random();
        int code = 100000 + random.nextInt(900000);
        if (txtMaKH1 != null) {
            txtMaKH1.setEnabled(false);
            txtMaKH1.setText("KH" + code);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        khachhang = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        tab2 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblThongTinKhachHang = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLichSuGiaoDich = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        capnhat = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        txtten = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        rboNam = new javax.swing.JRadioButton();
        rboNu = new javax.swing.JRadioButton();
        txtNgaySinh = new com.toedter.calendar.JDateChooser();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cboThanhPho = new javax.swing.JComboBox<>();
        cboQuanHuyen = new javax.swing.JComboBox<>();
        cboXaPhuong = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        txtSdt = new javax.swing.JTextField();
        lblID = new javax.swing.JLabel();
        btnsua = new javax.swing.JButton();
        btnxoa = new javax.swing.JButton();
        Thongtinkh = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtMaKH1 = new javax.swing.JTextField();
        txtTen = new javax.swing.JTextField();
        txtEmail1 = new javax.swing.JTextField();
        rboNam1 = new javax.swing.JRadioButton();
        rboNu1 = new javax.swing.JRadioButton();
        txtNamSinh = new com.toedter.calendar.JDateChooser();
        jPanel9 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        cboThanhPho1 = new javax.swing.JComboBox<>();
        cboQuanHuyen1 = new javax.swing.JComboBox<>();
        cboXaPhuong1 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        btnThem1 = new javax.swing.JButton();
        txtDiaChiCuThe = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        khachhang.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        tab2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        tblThongTinKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã KH", "Tên khách hàng", "Giới tính", "SDT", "Địa chỉ", "Email", "Ngày Sinh", "Trạng Thái "
            }
        ));
        tblThongTinKhachHang.setRowHeight(30);
        tblThongTinKhachHang.setShowGrid(true);
        tblThongTinKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThongTinKhachHangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblThongTinKhachHang);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1111, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addGap(34, 34, 34))
        );

        tab2.addTab("Thông tin khách hàng", jPanel5);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        tblLichSuGiaoDich.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã hóa đơn", "Ngày giao dịch", "Tổng tiền", "Trạng thái"
            }
        ));
        tblLichSuGiaoDich.setRowHeight(30);
        tblLichSuGiaoDich.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLichSuGiaoDichMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblLichSuGiaoDich);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1099, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 34, Short.MAX_VALUE))
        );

        tab2.addTab("Lịch sử giao dịch", jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tab2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tab2, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        btnThem.setBackground(new java.awt.Color(0, 204, 255));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Plus Math_3.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jLabel1.setText("Tìm kiếm");

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addComponent(txtTimKiem)
                .addGap(140, 140, 140)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(187, 187, 187))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout khachhangLayout = new javax.swing.GroupLayout(khachhang);
        khachhang.setLayout(khachhangLayout);
        khachhangLayout.setHorizontalGroup(
            khachhangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(khachhangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(khachhangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        khachhangLayout.setVerticalGroup(
            khachhangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, khachhangLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        capnhat.setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cập nhật thông tin khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        jPanel7.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("Ten");

        jLabel3.setText("Gioi Tinh");

        jLabel4.setText("Ngay Sinh");

        jLabel5.setText("Email");

        jLabel6.setText("Ma KH");

        txtMaKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaKHActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        buttonGroup1.add(rboNam);
        rboNam.setText("Nam");

        buttonGroup1.add(rboNu);
        rboNu.setText("Nữ");

        txtNgaySinh.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtten, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rboNam)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rboNu))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(txtEmail))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(txtten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rboNam)
                    .addComponent(rboNu))
                .addGap(24, 24, 24)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(116, 116, 116))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel7.setText("SDT");

        cboThanhPho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "  ", "Điện Biên", "Hòa Bình", "Lai Châu", "Lào Cai", "Sơn La", "Yên Bái", "Bắc Giang", "Bắc Kạn", "Cao Bằng", "Hà Giang", "Lạng Sơn", "Phú Thọ", "Quảng Ninh", "Thái Nguyên", "Tuyên Quang", "Bắc Giang", "Bắc Kạn", "Cao Bằng", "Hà Giang", "Lạng Sơn", "Phú Thọ", "Quảng Ninh", "Thái Nguyên", "Tuyên Quang", "Hà Tĩnh", "Nghệ An", "Quảng Bình", "Quảng Trị", "Thanh Hóa", "Thừa Thiên Huế", "Bình Định", "Bình Thuận", "Thành phố Đà Nẵng", "Khánh Hòa", "Ninh Thuận", "Phú Yên", "Quảng Nam", "Quảng Ngãi", "Đắk Lắk", "Đắk Nông", "Gia Lai", "Kon Tum", "Lâm Đồng", "Bà Rịa Vũng Tàu", "Bình Dương", "Bình Phước", "Đồng Nai", "Thành phố Hồ Chí Minh", "Tây Ninh", "An Giang", "Bạc Liêu", "Bến Tre", "Cà Mau", "Cần Thơ", "Đồng Tháp", "Hậu Giang", "Kiên Giang", "Long An", "Sóc Trăng", "Tiền Giang", "Trà Vinh", "Vĩnh Long", "Hà Nội" }));
        cboThanhPho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboThanhPhoActionPerformed(evt);
            }
        });

        cboQuanHuyen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "  ", "Quận Long Biên", "Quận Từ Liêm", "Quận Hà Đông", "Quận Thanh Trì", "Quận Gia Lâm", "Quận Ba Đình", "Quận Hoàn Kiếm", "Quận Đống Đa", "Quận Thanh Xuân", "Quận Cầu Giấy", "Quận Hoàng Mai", "Quận Hai Bà Trưng", "Quận Tây Hồ", " " }));
        cboQuanHuyen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboQuanHuyenActionPerformed(evt);
            }
        });

        cboXaPhuong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "  ", "Cống Vị", "Điện Biên", "Đội Cấn", "Giảng Võ", "Kim Mã", "Liễu Giai", "Ngọc Hà", "Ngọc Khánh", "Nguyễn Trung Trực", "Phúc Xá", "Quán Thánh", "Thành Công", "Trúc Bạch", "Vĩnh Phúc." }));
        cboXaPhuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboXaPhuongActionPerformed(evt);
            }
        });

        jLabel8.setText("Địa chỉ cụ thể");

        btnsua.setBackground(new java.awt.Color(0, 204, 255));
        btnsua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/External Link_2.png"))); // NOI18N
        btnsua.setText("Sua");
        btnsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaActionPerformed(evt);
            }
        });

        btnxoa.setBackground(new java.awt.Color(0, 204, 255));
        btnxoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Agent.png"))); // NOI18N
        btnxoa.setText("Xoa");
        btnxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(btnsua, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(btnxoa, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel8)
                        .addComponent(txtDiaChi, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(cboThanhPho, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addGap(15, 15, 15)
                                    .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(1, 1, 1))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cboQuanHuyen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cboXaPhuong, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(txtSdt)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel7)
                .addGap(3, 3, 3)
                .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboThanhPho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboQuanHuyen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboXaPhuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnsua, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnxoa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblID)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(35, 35, 35))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout capnhatLayout = new javax.swing.GroupLayout(capnhat);
        capnhat.setLayout(capnhatLayout);
        capnhatLayout.setHorizontalGroup(
            capnhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(capnhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, capnhatLayout.createSequentialGroup()
                    .addContainerGap(110, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(119, Short.MAX_VALUE)))
        );
        capnhatLayout.setVerticalGroup(
            capnhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 598, Short.MAX_VALUE)
            .addGroup(capnhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, capnhatLayout.createSequentialGroup()
                    .addContainerGap(65, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(65, Short.MAX_VALUE)))
        );

        Thongtinkh.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thêm thông tin khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel10.setText("Ten");

        jLabel11.setText("Gioi Tinh");

        jLabel12.setText("Ngay Sinh");

        jLabel13.setText("Email");

        jLabel14.setText("Ma KH");

        txtEmail1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmail1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rboNam1);
        rboNam1.setSelected(true);
        rboNam1.setText("Nam");
        rboNam1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rboNam1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rboNu1);
        rboNu1.setText("Nữ");

        txtNamSinh.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaKH1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(txtEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNamSinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(rboNam1)
                        .addGap(18, 18, 18)
                        .addComponent(rboNu1)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtMaKH1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rboNam1)
                            .addComponent(rboNu1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtNamSinh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel15.setText("SDT");

        cboThanhPho1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "  ", "Điện Biên", "Hòa Bình", "Lai Châu", "Lào Cai", "Sơn La", "Yên Bái", "Bắc Giang", "Bắc Kạn", "Cao Bằng", "Hà Giang", "Lạng Sơn", "Phú Thọ", "Quảng Ninh", "Thái Nguyên", "Tuyên Quang", "Bắc Giang", "Bắc Kạn", "Cao Bằng", "Hà Giang", "Lạng Sơn", "Phú Thọ", "Quảng Ninh", "Thái Nguyên", "Tuyên Quang", "Hà Tĩnh", "Nghệ An", "Quảng Bình", "Quảng Trị", "Thanh Hóa", "Thừa Thiên Huế", "Bình Định", "Bình Thuận", "Thành phố Đà Nẵng", "Khánh Hòa", "Ninh Thuận", "Phú Yên", "Quảng Nam", "Quảng Ngãi", "Đắk Lắk", "Đắk Nông", "Gia Lai", "Kon Tum", "Lâm Đồng", "Bà Rịa Vũng Tàu", "Bình Dương", "Bình Phước", "Đồng Nai", "Thành phố Hồ Chí Minh", "Tây Ninh", "An Giang", "Bạc Liêu", "Bến Tre", "Cà Mau", "Cần Thơ", "Đồng Tháp", "Hậu Giang", "Kiên Giang", "Long An", "Sóc Trăng", "Tiền Giang", "Trà Vinh", "Vĩnh Long", "Hà Nội" }));
        cboThanhPho1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboThanhPho1ActionPerformed(evt);
            }
        });

        cboQuanHuyen1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "  ", "Quận Long Biên", "Quận Từ Liêm", "Quận Hà Đông", "Quận Thanh Trì", "Quận Gia Lâm", "Quận Ba Đình", "Quận Hoàn Kiếm", "Quận Đống Đa", "Quận Thanh Xuân", "Quận Cầu Giấy", "Quận Hoàng Mai", "Quận Hai Bà Trưng", "Quận Tây Hồ", " " }));
        cboQuanHuyen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboQuanHuyen1ActionPerformed(evt);
            }
        });

        cboXaPhuong1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "  ", "Cống Vị", "Điện Biên", "Đội Cấn", "Giảng Võ", "Kim Mã", "Liễu Giai", "Ngọc Hà", "Ngọc Khánh", "Nguyễn Trung Trực", "Phúc Xá", "Quán Thánh", "Thành Công", "Trúc Bạch", "Vĩnh Phúc." }));
        cboXaPhuong1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboXaPhuong1ActionPerformed(evt);
            }
        });

        jLabel16.setText("Địa chỉ cụ thể");

        btnThem1.setBackground(new java.awt.Color(0, 204, 255));
        btnThem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/External Link_2.png"))); // NOI18N
        btnThem1.setText("Them");
        btnThem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThem1ActionPerformed(evt);
            }
        });

        jLabel17.setText("Tỉnh/ Thành Phố");

        jLabel18.setText("Quận / Huyện");

        jLabel19.setText("Xã Phường");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThem1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(cboThanhPho1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboQuanHuyen1, 0, 1, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(cboXaPhuong1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSDT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiaChiCuThe, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel15)
                .addGap(5, 5, 5)
                .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDiaChiCuThe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboThanhPho1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboQuanHuyen1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboXaPhuong1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(btnThem1)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ThongtinkhLayout = new javax.swing.GroupLayout(Thongtinkh);
        Thongtinkh.setLayout(ThongtinkhLayout);
        ThongtinkhLayout.setHorizontalGroup(
            ThongtinkhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThongtinkhLayout.createSequentialGroup()
                .addContainerGap(217, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        ThongtinkhLayout.setVerticalGroup(
            ThongtinkhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThongtinkhLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(ThongtinkhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(capnhat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(khachhang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(Thongtinkh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(152, 152, 152))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Thongtinkh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(capnhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(khachhang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblThongTinKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThongTinKhachHangMouseClicked
        // TODO add your handling code here:
        try {
            this.row = tblThongTinKhachHang.getSelectedRow();
            if (this.row > -1) {
                //setForm();
                tab2.setSelectedIndex(1);
                init();
                //UpdateStatus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblThongTinKhachHangMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        Thongtinkh.setVisible(true);
        khachhang.setVisible(false);
//        CapNhatThongTinForm ttf = new CapNhatThongTinForm(KhachHangForm.this, true);
//        ttf.setVisible(true);

//        try {
//
//            KhachHang kh = getForm();
//            if (khsv.ADDKhachHang(kh) != null) {
//                JOptionPane.showMessageDialog(this, "Them Thanh Cong");
//                FillTable();
//            } else {
//                JOptionPane.showMessageDialog(this, "Them That Bai");
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblLichSuGiaoDichMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLichSuGiaoDichMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblLichSuGiaoDichMouseClicked

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void btnsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaActionPerformed
        // TODO add your handling code here:

        int check = JOptionPane.showConfirmDialog(null, "Ban co muon sua khong", "thong bao", JOptionPane.YES_NO_OPTION);
        if (check != JOptionPane.YES_OPTION) {
            return;
        }
        try {
            KhachHang kh = getForm();
            if (khsv.UpdateKhachHang(kh) != null) {
                JOptionPane.showMessageDialog(null, "UPDATE Thanh Cong");

                // Assuming khf is an instance variable of CapThatThongTinKhachHangForm
                FillTable(); // Update the table data in the existing instance
                khachhang.setVisible(true);
                capnhat.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(null, "Update that bai");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_btnsuaActionPerformed

    private void btnxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaActionPerformed
        //TODO add your handling code here:
        int check = JOptionPane.showConfirmDialog(null, "Ban co muon xoa khong", "thong bao", JOptionPane.YES_NO_OPTION);
        if (check != JOptionPane.YES_OPTION) {
            return;
        }
        try {
            String MaKH = txtMaKH.getText();
            if (khsv.DeletedMem(MaKH) != null) {
                JOptionPane.showMessageDialog(null, "Xoa Thanh Cong");

                // Assuming khf is an instance variable or a properly initialized instance
                FillTable(); // Update the table data in the existing instance
                khachhang.setVisible(true);
                capnhat.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(null, "Xoa That Bai");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnxoaActionPerformed

    private void cboThanhPhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboThanhPhoActionPerformed
        // TODO add your handling code here:
        int index = cboThanhPho.getSelectedIndex();
        if (index >= 0) {

            showData();
            //System.out.println("Thanh Pho " + cboThanhPho.getItemAt(index));
        }
    }//GEN-LAST:event_cboThanhPhoActionPerformed

    private void cboQuanHuyenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboQuanHuyenActionPerformed
        // TODO add your handling code here:
        int index = cboQuanHuyen.getSelectedIndex();
        if (index >= 0) {

            showDataXa();
            //System.out.println("Thanh Pho " + cboThanhPho.getItemAt(index));
        }
    }//GEN-LAST:event_cboQuanHuyenActionPerformed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:

        searchTable();
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void txtMaKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaKHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaKHActionPerformed

    private void txtEmail1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmail1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmail1ActionPerformed

    private void rboNam1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rboNam1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rboNam1ActionPerformed

    private void cboThanhPho1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboThanhPho1ActionPerformed
        // TODO add your handling code here:
        int index = cboThanhPho1.getSelectedIndex();
        if (index >= 0) {

            showData();
            //System.out.println("Thanh Pho " + cboThanhPho.getItemAt(index));
        }
    }//GEN-LAST:event_cboThanhPho1ActionPerformed

    private void cboQuanHuyen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboQuanHuyen1ActionPerformed
        // TODO add your handling code here:
        int index = cboQuanHuyen1.getSelectedIndex();
        if (index >= 0) {

            showDataXa2();
            //System.out.println("Thanh Pho " + cboThanhPho.getItemAt(index));
        }
    }//GEN-LAST:event_cboQuanHuyen1ActionPerformed

    private void btnThem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThem1ActionPerformed
        // TODO add your handling code here:
        int chon = JOptionPane.showConfirmDialog(null, "Ban co muon them", "Thong bao", JOptionPane.YES_NO_OPTION);
        if (chon != JOptionPane.YES_OPTION) {
            return;
        }
        if (checkvalidate() == false) {
            return;
        }
        try {
            KhachHang kh = ThemKH();
            if (khsv.ADDKhachHang(kh) != null) {
                JOptionPane.showMessageDialog(null, "Them Thanh Cong");

                KhachHangForm khf = new KhachHangForm();
                FillTable();
                khachhang.setVisible(true);
                Thongtinkh.setVisible(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnThem1ActionPerformed

    private void cboXaPhuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboXaPhuongActionPerformed
        // TODO add your handling code here:
//        int index = cboThanhPho.getSelectedIndex();
//        if (index >= 0) {
//
//            showDataXa();
//            //System.out.println("Thanh Pho " + cboThanhPho.getItemAt(index));
//        }
    }//GEN-LAST:event_cboXaPhuongActionPerformed

    private void cboXaPhuong1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboXaPhuong1ActionPerformed
        // TODO add your handling code here:
//        int index = cboThanhPho.getSelectedIndex();
//        if (index >= 0) {
//
//            showDataXa();
//            //System.out.println("Thanh Pho " + cboThanhPho.getItemAt(index));
//        }
    }//GEN-LAST:event_cboXaPhuong1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Thongtinkh;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThem1;
    private javax.swing.JButton btnsua;
    private javax.swing.JButton btnxoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JPanel capnhat;
    private javax.swing.JComboBox<String> cboQuanHuyen;
    private javax.swing.JComboBox<String> cboQuanHuyen1;
    private javax.swing.JComboBox<String> cboThanhPho;
    private javax.swing.JComboBox<String> cboThanhPho1;
    private javax.swing.JComboBox<String> cboXaPhuong;
    private javax.swing.JComboBox<String> cboXaPhuong1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel khachhang;
    private javax.swing.JLabel lblID;
    private javax.swing.JRadioButton rboNam;
    private javax.swing.JRadioButton rboNam1;
    private javax.swing.JRadioButton rboNu;
    private javax.swing.JRadioButton rboNu1;
    private javax.swing.JTabbedPane tab2;
    private javax.swing.JTable tblLichSuGiaoDich;
    private javax.swing.JTable tblThongTinKhachHang;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtDiaChiCuThe;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmail1;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtMaKH1;
    private com.toedter.calendar.JDateChooser txtNamSinh;
    private com.toedter.calendar.JDateChooser txtNgaySinh;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtSdt;
    private javax.swing.JTextField txtTen;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtten;
    // End of variables declaration//GEN-END:variables

    public void FillTable() {
        int STT = 1;
        model.setRowCount(0);
        lst = khsv.AllThongTinKhachHang();
        for (KhachHang lst : lst) {
            model.addRow(new Object[]{
                STT++,
                lst.getMaKH(),
                lst.getTenKH(),
                lst.isGioiTinh() ? "Nam" : "Nữ",
                lst.getSdt(),
                lst.getThanhPho(),
                lst.getEmail(),
                lst.getNgaySinh(),});

        }

    }

    void FillLS() {
        model = (DefaultTableModel) tblLichSuGiaoDich.getModel();

        // Clear the table model
        model.setRowCount(0);

        // Get the selected row index from tblThongTinKhachHang
        int index = tblThongTinKhachHang.getSelectedRow();

        // Check if a row is selected
        if (index == -1) {
            // Handle the case where no row is selected, you might want to show a message or return
            return;
        }

        // Get the selected KhachHang object from the list
        KhachHang selectedKhachHang = lst.get(index);

        // Get the ID of the selected KhachHang
        int selectedID = selectedKhachHang.getID();

        // Get the list of transactions for the selected KhachHang
        ArrayList<TKHoaDon> lstTransactions = khsv.ThongTinGiaoDich(selectedID);

        // Check if there are transactions for the selected KhachHang
        if (!lstTransactions.isEmpty()) {
            int STT = 1;
            for (TKHoaDon hoaDon : lstTransactions) {
                model.addRow(new Object[]{
                    STT++,
                    hoaDon.getMaHoaDon(),
                    hoaDon.getNgayGiaoDich(),
                    hoaDon.getTongTien(),
                    hoaDon.getTrangThai()
                });
            }
        } else {
            // Handle the case where there are no transactions for the selected KhachHang
            // You might want to show a message or log something

        }
    }

//    
    private void searchTable() {
        String keyword = txtTimKiem.getText();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        tblThongTinKhachHang.setRowSorter(sorter);

        if (keyword.trim().length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + keyword));
        }
    }

    private void init() {
        FillLS();
    }

    public void TableWithButton() {
        TableColumn buttonColumn = tblThongTinKhachHang.getColumnModel().getColumn(8);

        // Set the renderer for rendering the button
        buttonColumn.setCellRenderer(new ButtonRenderer());

        // Set the editor for editing the button
        buttonColumn.setCellEditor(new ButtonEditor());
    }

    private class ButtonRenderer extends JButton implements TableCellRenderer {

        public ButtonRenderer() {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setText((value == null) ? "Sửa" : "Sửa");
            return this;
        }
    }

    private class ButtonEditor extends DefaultCellEditor {

        private JButton button;

        public ButtonEditor() {
            super(new JTextField());
            setClickCountToStart(1);
            button = new JButton();

            button.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    // Xử lý sự kiện khi nút được nhấp
                    int index = tblThongTinKhachHang.getSelectedRow();
                    if (index == -1) {
                        return;
                    }
                    if (index != -1) {
                        KhachHang kh = (KhachHang) lst.get(index);
                        model.removeRow(index);
                        tblThongTinKhachHang.setModel(model);
                        //((AbstractTableModel) .getModel()).fireTableDataChanged();
                        if (kh != null) {
                            // goi form
                            capnhat.setVisible(true);
                            khachhang.setVisible(false);
                            setData(kh);
                        }
                    }
                }
            });
        }

        @Override

        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            button.setText((value == null) ? "Click roi nek" : value.toString());
            FillTable();
            return button;
        }

        void setData(KhachHang kh) {
            txtMaKH.setEnabled(false); // Corrected from txtMaKH.equals(false)
            lblID.setVisible(false);

            txtMaKH.setText(kh.getMaKH());
            txtDiaChi.setText(kh.getDiaChi());
            txtNgaySinh.setDate(kh.getNgaySinh());
            txtEmail.setText(kh.getEmail());
            txtSdt.setText(kh.getSdt());
            txtten.setText(kh.getTenKH());
            if (kh.isGioiTinh()) {
                rboNam.setSelected(true);
            } else {
                rboNu.setSelected(true);
            }
            //getData();
            cboThanhPho.setSelectedItem(kh.getThanhPho());
            cboQuanHuyen.setSelectedItem(kh.getQuanHuyen());
            cboXaPhuong.setSelectedItem(kh.getXaPhuong());
            lblID.setText(String.valueOf(kh.getID()));
        }
    }

    private ArrayList<String> getData() {
        ArrayList<String> data = new ArrayList<>(); // Initialize the ArrayList

        int index1 = cboThanhPho.getSelectedIndex();
        int index2 = cboThanhPho1.getSelectedIndex();

        if (index1 != -1 || index2 != -1) { // Make sure an item is selected in at least one combo box
            String selectedCity1 = cboThanhPho.getItemAt(index1).toString();
            String selectedCity2 = cboThanhPho1.getItemAt(index2).toString();

            if (selectedCity1.equals("Hà Nội") || selectedCity2.equals("Hà Nội")) {
                data.add("Quận Hà Đông");
                data.add("Quận Long Biên");
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Hòa Bình") || selectedCity2.equals("Hòa Bình")) {
                data.add("Thành phố Hòa Bình");
                data.add("Huyện Đà Bắc");
                data.add("Huyện Mai Châu");
                data.add("Huyện Lạc Sơn");
                data.add("uyện Kỳ Sơn");
                data.add("Huyện Lương Sơn");
                data.add("Huyện Kim Bôi");
                data.add("Huyện Lạc Thủy");
                data.add("Huyện Yên Thủy");
            } else if (selectedCity1.equals("Điện Biên") || selectedCity2.equals("Điện Biên")) {
                data.add("Thành phố Điện Biên Phủ");
                data.add("Thị xã Mường Lay"); // Corrected district name
                data.add("Huyện Điện Biên");
                data.add("Huyện Điện Biên Đông");
                data.add("Huyện Mường Ảng");
                data.add("Huyện Mường Chà");
                data.add("Huyện Mường Nhé");
                data.add("Huyện Nậm Pồ");
                data.add("Huyện Tủa Chùa");
                data.add("Huyện Tuần Giáo");
            } else if (selectedCity1.equals("Lai Châu") || selectedCity2.equals("Lai Châu")) {
                data.add("Thành phố Lai Châu");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Lào Cai") || selectedCity2.equals("Lào Cai")) {
                data.add("Thành phố Lào Cai");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("An Giang") || selectedCity2.equals("An Giang")) {
                data.add("Thành phố An Giang");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Bà Rịa Vũng Tàu") || selectedCity2.equals("Bà Rịa Vũng Tàu")) {
                data.add("Thành phố Bà RỊa Vũng Tàu");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Bắc Giang") || selectedCity2.equals("Bắc Giang")) {
                data.add("Thành phố Bắc Giang");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Bắc Kạn") || selectedCity2.equals("Bắc Kạn")) {
                data.add("Thành phố Bắc Kạn");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Bạc Liêu") || selectedCity2.equals("Bạc Liêu")) {
                data.add("Thành phố Bạc Liêu");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Bắc Ninh") || selectedCity2.equals("Bắc Ninh")) {
                data.add("Thành phố Bắc Ninh");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Bến Tre") || selectedCity2.equals("Bến Tre")) {
                data.add("Thành phố Bến Tre");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Bình Định") || selectedCity2.equals("Bình Định")) {
                data.add("Thành phố Bình Định");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Bình Dương") || selectedCity2.equals("Bình Dương")) {
                data.add("Thành phố Bình Dương");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Bình Phước") || selectedCity2.equals("Bình Phước")) {
                data.add("Thành phố Bình Phước");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Bình Thuận") || selectedCity2.equals("Bình Thuận")) {
                data.add("Thành phố Bình Thuận");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Cà Mau") || selectedCity2.equals("Cà Mau")) {
                data.add("Thành phố Cà Mau");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Cần Thơ") || selectedCity2.equals("Cần Thơ")) {
                data.add("Thành phố Cần Thơ");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Cao Bằng") || selectedCity2.equals("Cao Bằng")) {
                data.add("Thành phố Cao Bằng");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Đà Nẵng") || selectedCity2.equals("Đà Nẵng")) {
                data.add("Thành phố Đà Nẵng");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Đắk Lắk") || selectedCity2.equals("Đắk Lắk")) {
                data.add("Thành phố Đắk Lắk");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Đắk Nông") || selectedCity2.equals("Đắk Nông")) {
                data.add("Thành phố Đắk Nông");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Đồng Nai") || selectedCity2.equals("Đồng Nai")) {
                data.add("Thành phố Đồng Nai");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Đồng Tháp") || selectedCity2.equals("Đồng Tháp")) {
                data.add("Thành phố Đồng Tháp");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Gia Lai") || selectedCity2.equals("Gia Lai")) {
                data.add("Thành phố Gia Lai");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Hà Giang") || selectedCity2.equals("Hà Giang")) {
                data.add("Thành phố Hà Giang");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Hà Nam") || selectedCity2.equals("Hà Nam")) {
                data.add("Thành phố Hà Nam");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Hà Tĩnh") || selectedCity2.equals("Hà Tĩnh")) {
                data.add("Thanh phố Hà Tĩnh");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Hải Dương") || selectedCity2.equals("Hải Dương")) {
                data.add("Thanh phố Hải Dương");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Hải Phòng") || selectedCity2.equals("Hải Phòng")) {
                data.add("Thành phố Hải Phòng");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Hậu Giang") || selectedCity2.equals("Hậu Giang")) {
                data.add("Thành phố Hậu Giang");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Hưng Yên") || selectedCity2.equals("Hưng Yên")) {
                data.add("Thành phố Hưng Yên");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Khách Hòa") || selectedCity2.equals("Khánh Hòa")) {
                data.add("Thành phố Khánh Hòa");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Kiên Giang") || selectedCity2.equals("Kiên Giang")) {
                data.add("Thành phố Kiên Giang");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Kon Tum") || selectedCity2.equals("Kon Tum")) {
                data.add("Thành Phố Kon Tum");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Lạng Sơn") || selectedCity2.equals("Lạng Sơn")) {
                data.add("Thành phố Lạng Sơn");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Lâm Đồng") || selectedCity2.equals("Lâm Đồng")) {
                data.add("Thành phố Lâm Đồng");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Long An") || selectedCity2.equals("Long An")) {
                data.add("Thành phố Long An");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Nam Định") || selectedCity2.equals("Nam Định")) {
                data.add("Thành phố Nam Định");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Nghệ An") || selectedCity2.equals("Nghệ An")) {
                data.add("Thành phố Nghệ An");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Ninh Bình") || selectedCity2.equals("Ninh Bình")) {
                data.add("Thành phố Ninh Bình");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Ninh Thuận") || selectedCity2.equals("Ninh Thuận")) {
                data.add("Thành phố Ninh Thuận");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Phú Thọ") || selectedCity2.equals("Phú Thọ")) {
                data.add("Thành phố Phú Thọ");
                data.add("Quận Long Biên"); // Corrected district name
                data.add("Quận Từ Liêm");
                data.add("Quận Thanh Trì");
            } else if (selectedCity1.equals("Another City")) {
                // Add data for another city if needed
            }
        }

        return data;
    }

    private void showData() {
        cboQuanHuyen.removeAllItems();
        cboQuanHuyen1.removeAllItems();
        ArrayList<String> lst = getData();
        for (String string : lst) {
            cboQuanHuyen.addItem(string);
            cboQuanHuyen1.addItem(string);
        }
    }

    private ArrayList<String> getDataXaPhuong() {
        ArrayList<String> data = new ArrayList<>(); // Initialize the ArrayList

        int index1 = cboQuanHuyen.getSelectedIndex();

        if (index1 != -1) {
            String selected1 = cboQuanHuyen.getItemAt(index1).toString();
            addDataForCity(selected1, data);
        }

        return data;
    }

    private ArrayList<String> getDataXaPhuong2() {
        ArrayList<String> data = new ArrayList<>();
        int index2 = cboQuanHuyen1.getSelectedIndex();
        if (index2 != -1) {
            String selected2 = cboQuanHuyen1.getItemAt(index2).toString();
            addDataForCity(selected2, data);
        }

        return data;
    }

    private void addDataForCity(String selectedCity, ArrayList<String> data) {
        switch (selectedCity) {
            case "Quận Hà Đông":
                data.addAll(Arrays.asList("Cống Vị", "Quán Thánh", "Triều Khúc", "Quận Thanh Trì"));
                break;
            case "Quận Long Biên":
                data.addAll(Arrays.asList("Việt Hưng", "Bồ Đề", "Gia Thụy", "Cự Khối", "Đức Giang", "Giang Biên", "Long Biên",
                        "Ngọc Lâm",
                        "Ngọc Thụy",
                        "Phúc Đồng",
                        "Phúc Lợi",
                        "Sài Đồng",
                        "Thạch Bàn",
                        "Thượng Thanh"));
                break;
            // Add more cases for other cities if needed
            case "Thành phố Điện Biên Phủ":
                data.addAll(Arrays.asList("Việt Hưng", "Bồ Đề", "Gia Thụy", "Cự Khối", "Đức Giang", "Giang Biên", "Long Biên",
                        "Ngọc Lâm",
                        "Ngọc Thụy",
                        "Phúc Đồng",
                        "Phúc Lợi",
                        "Sài Đồng",
                        "Thạch Bàn",
                        "Thượng Thanh"));
                break;
            case "Thị xã Mường Lay":
                data.addAll(Arrays.asList("Việt Hưng", "Bồ Đề", "Gia Thụy", "Cự Khối", "Đức Giang", "Giang Biên", "Long Biên",
                        "Ngọc Lâm",
                        "Ngọc Thụy",
                        "Phúc Đồng",
                        "Phúc Lợi",
                        "Sài Đồng",
                        "Thạch Bàn",
                        "Thượng Thanh"));
                break;
            case "Thành phố Hòa Bình":
                data.addAll(Arrays.asList("Việt Hưng", "Bồ Đề", "Gia Thụy", "Cự Khối", "Đức Giang", "Giang Biên", "Long Biên",
                        "Ngọc Lâm",
                        "Ngọc Thụy",
                        "Phúc Đồng",
                        "Phúc Lợi",
                        "Sài Đồng",
                        "Thạch Bàn",
                        "Thượng Thanh"));
                break;
            case "Thành phố Nam Định":
                data.addAll(Arrays.asList("Việt Hưng", "Bồ Đề", "Gia Thụy", "Cự Khối", "Đức Giang", "Giang Biên", "Long Biên",
                        "Ngọc Lâm",
                        "Ngọc Thụy",
                        "Phúc Đồng",
                        "Phúc Lợi",
                        "Sài Đồng",
                        "Thạch Bàn",
                        "Thượng Thanh"));
                break;
            case "Thành phố Nghệ An":
                data.addAll(Arrays.asList("Việt Hưng", "Bồ Đề", "Gia Thụy", "Cự Khối", "Đức Giang", "Giang Biên", "Long Biên",
                        "Ngọc Lâm",
                        "Ngọc Thụy",
                        "Phúc Đồng",
                        "Phúc Lợi",
                        "Sài Đồng",
                        "Thạch Bàn",
                        "Thượng Thanh"));
                break;
            case "Thành phố Hà Tĩnh":
                data.addAll(Arrays.asList("Việt Hưng", "Bồ Đề", "Gia Thụy", "Cự Khối", "Đức Giang", "Giang Biên", "Long Biên",
                        "Ngọc Lâm",
                        "Ngọc Thụy",
                        "Phúc Đồng",
                        "Phúc Lợi",
                        "Sài Đồng",
                        "Thạch Bàn",
                        "Thượng Thanh"));
                break;
            case "Thành phố Bình Phước":
                data.addAll(Arrays.asList("Việt Hưng", "Bồ Đề", "Gia Thụy", "Cự Khối", "Đức Giang", "Giang Biên", "Long Biên",
                        "Ngọc Lâm",
                        "Ngọc Thụy",
                        "Phúc Đồng",
                        "Phúc Lợi",
                        "Sài Đồng",
                        "Thạch Bàn",
                        "Thượng Thanh"));
                break;
            case "Thành phố Bình Thuận":
                data.addAll(Arrays.asList("Việt Hưng", "Bồ Đề", "Gia Thụy", "Cự Khối", "Đức Giang", "Giang Biên", "Long Biên",
                        "Ngọc Lâm",
                        "Ngọc Thụy",
                        "Phúc Đồng",
                        "Phúc Lợi",
                        "Sài Đồng",
                        "Thạch Bàn",
                        "Thượng Thanh"));
                break;
            case "Thành phố Long An":
                data.addAll(Arrays.asList("Việt Hưng", "Bồ Đề", "Gia Thụy", "Cự Khối", "Đức Giang", "Giang Biên", "Long Biên",
                        "Ngọc Lâm",
                        "Ngọc Thụy",
                        "Phúc Đồng",
                        "Phúc Lợi",
                        "Sài Đồng",
                        "Thạch Bàn",
                        "Thượng Thanh"));
                break;
            case "Thành phố Ninh Bình":
                data.addAll(Arrays.asList("Việt Hưng", "Bồ Đề", "Gia Thụy", "Cự Khối", "Đức Giang", "Giang Biên", "Long Biên",
                        "Ngọc Lâm",
                        "Ngọc Thụy",
                        "Phúc Đồng",
                        "Phúc Lợi",
                        "Sài Đồng",
                        "Thạch Bàn",
                        "Thượng Thanh"));
                break;
            case "Thành phố Phú Thọ":
                data.addAll(Arrays.asList("Việt Hưng", "Bồ Đề", "Gia Thụy", "Cự Khối", "Đức Giang", "Giang Biên", "Long Biên",
                        "Ngọc Lâm",
                        "Ngọc Thụy",
                        "Phúc Đồng",
                        "Phúc Lợi",
                        "Sài Đồng",
                        "Thạch Bàn",
                        "Thượng Thanh"));
                break;
            case "Thành phố Hưng Yên":
                data.addAll(Arrays.asList("Việt Hưng", "Bồ Đề", "Gia Thụy", "Cự Khối", "Đức Giang", "Giang Biên", "Long Biên",
                        "Ngọc Lâm",
                        "Ngọc Thụy",
                        "Phúc Đồng",
                        "Phúc Lợi",
                        "Sài Đồng",
                        "Thạch Bàn",
                        "Thượng Thanh"));
                break;
            case "Thành phố Hậu Giang":
                data.addAll(Arrays.asList("Việt Hưng", "Bồ Đề", "Gia Thụy", "Cự Khối", "Đức Giang", "Giang Biên", "Long Biên",
                        "Ngọc Lâm",
                        "Ngọc Thụy",
                        "Phúc Đồng",
                        "Phúc Lợi",
                        "Sài Đồng",
                        "Thạch Bàn",
                        "Thượng Thanh"));
                break;
            case "Thành phố Ninh Thuận":
                data.addAll(Arrays.asList("Việt Hưng", "Bồ Đề", "Gia Thụy", "Cự Khối", "Đức Giang", "Giang Biên", "Long Biên",
                        "Ngọc Lâm",
                        "Ngọc Thụy",
                        "Phúc Đồng",
                        "Phúc Lợi",
                        "Sài Đồng",
                        "Thạch Bàn",
                        "Thượng Thanh"));
                break;

        }

    }

    private void showDataXa() {
        cboXaPhuong.removeAll();
        cboXaPhuong.setModel(new DefaultComboBoxModel<>(getDataXaPhuong().toArray(new String[0])));
    }

    private void showDataXa2() {
        cboXaPhuong1.removeAll();

        cboXaPhuong1.setModel(new DefaultComboBoxModel<>(getDataXaPhuong2().toArray(new String[0])));

    }

    public KhachHang getForm() {
        KhachHang kh = new KhachHang();
        kh.setTenKH(txtten.getText());
        //kh.setGioiTinh(rboNam.isSelected());
        kh.setThanhPho(cboThanhPho.getSelectedItem().toString());
        kh.setQuanHuyen(cboQuanHuyen.getSelectedItem().toString());
        kh.setXaPhuong(cboXaPhuong.getSelectedItem().toString());
        kh.setNgaySinh(txtNgaySinh.getDate());
        kh.setGioiTinh(rboNam.isSelected() ? true : false);
        kh.setSdt(txtSdt.getText());
        kh.setEmail(txtEmail.getText());
        kh.setDiaChi(txtDiaChi.getText());
        kh.setMaKH(txtMaKH.getText());
        kh.setID(Integer.valueOf(lblID.getText()));
        // Check if a row is selected before accessing the ArrayList

        return kh;
    }

    public KhachHang ThemKH() {
        txtMaKH1.setEditable(true);

        KhachHang kh = new KhachHang();

        kh.setTenKH(txtTen.getText());
        kh.setThanhPho(cboThanhPho1.getSelectedItem().toString());
        kh.setQuanHuyen(cboQuanHuyen1.getSelectedItem().toString());
        kh.setXaPhuong(cboXaPhuong1.getSelectedItem().toString());
        kh.setGioiTinh(rboNam1.isSelected());
        kh.setSdt(txtSDT.getText());
        kh.setEmail(txtEmail1.getText());

        // Ensure that txtNgaySinh1.getDate() is not null before setting it
        // kh.setNgaySinh(txtNgaySinh1.getDate());
        // Ensure that txtDiaChi1.getText() is not null or empty before setting it
        kh.setNgaySinh(txtNamSinh.getDate());
        kh.setDiaChi(txtDiaChiCuThe.getText());
        kh.setMaKH(txtMaKH1.getText());
        //kh.setID(Integer.valueOf(lblID.getText()));
        // Check if a row is selected before accessing the ArrayList

        return kh;
    }

    private boolean checkvalidate() {
        int index = cboThanhPho1.getSelectedIndex();
        int index2 = cboQuanHuyen1.getSelectedIndex();
        int index3 = cboXaPhuong1.getSelectedIndex();
        String ten = txtTen.getText();
        Date ngaySinh = txtNamSinh.getDate();
        String Email = txtEmail1.getText();
        String sdt = txtSDT.getText();
        String diachi = txtDiaChiCuThe.getText();
        String thanhPho = cboThanhPho1.getItemAt(index);
        String quanHuyen = cboQuanHuyen1.getItemAt(index2);
        String xaPhuong = cboXaPhuong1.getItemAt(index3);
        if (ten.isEmpty() || ngaySinh == null || thanhPho.equals("") || Email.isEmpty() || sdt.isEmpty()
                || diachi.isEmpty() || quanHuyen.isEmpty() || xaPhuong.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Khong duoc de trong");
            return false;
        } else if (sdt.length() != 10) {
            JOptionPane.showMessageDialog(null, "So dien thoai phai la 10 so");
            return false;
        }
        return true;
    }

}
