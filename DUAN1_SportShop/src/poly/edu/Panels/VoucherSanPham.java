/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package poly.edu.Panels;

import java.util.ArrayList;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import poly.edu.Model.KhuyenMai;
import poly.edu.Model.SanPhamChiTiet;
import poly.edu.service.SanPhamChiTietDao;
import poly.edu.service.VoucherService;

/**
 *
 * @author Admin
 */
public class VoucherSanPham extends javax.swing.JFrame {

    public static ArrayList<SanPhamChiTiet> listSPKM;
    DefaultTableModel dtm = new DefaultTableModel();
    ArrayList<KhuyenMai> list = new ArrayList<>();
    VoucherService vs = new VoucherService();
    VoucherForm vcf = new VoucherForm();
    ArrayList<SanPhamChiTiet> listSPCT = new ArrayList<>();
    SanPhamChiTietDao spctd = new SanPhamChiTietDao();
    private VoucherForm voucherForm;

    public VoucherSanPham(VoucherForm voucherForm) {
        this.voucherForm = voucherForm;
    }

    /**
     * Creates new form VoucherSanPham
     */
    public VoucherSanPham() {
        initComponents();
        setLocationRelativeTo(null);
        listSPCT = spctd.selectAll();
        fillToTableALLSPCT(listSPCT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        txtTimKiemSP = new javax.swing.JTextField();
        btnAddDanhSach = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSP = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sản phẩm có thể áp dụng khuyến mãi");
        setBackground(new java.awt.Color(255, 255, 255));

        jCheckBox1.setText("Select All");

        txtTimKiemSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemSPActionPerformed(evt);
            }
        });

        btnAddDanhSach.setBackground(new java.awt.Color(0, 204, 255));
        btnAddDanhSach.setText("Thêm vào danh sách");
        btnAddDanhSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDanhSachActionPerformed(evt);
            }
        });

        tbSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Select", "STT", "Mã SPCT", "Tên SP", "Giá bán", "Hãng", "Màu sắc", "Kích thước", "Chất liệu"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbSP.setRowHeight(30);
        jScrollPane1.setViewportView(tbSP);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jCheckBox1)
                .addGap(94, 94, 94)
                .addComponent(txtTimKiemSP, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddDanhSach))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(txtTimKiemSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddDanhSach))
                .addGap(55, 55, 55)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKiemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemSPActionPerformed
        // TODO add your handling code here:
        searchTable();
    }//GEN-LAST:event_txtTimKiemSPActionPerformed

    private void btnAddDanhSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDanhSachActionPerformed
//        ArrayList<SanPhamChiTiet> selectedSPCTs = addSPCT();
//        voucherForm.setSelectedData(selectedSPCTs);
//        dispose();

    }//GEN-LAST:event_btnAddDanhSachActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VoucherSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VoucherSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VoucherSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VoucherSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VoucherSanPham().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDanhSach;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbSP;
    private javax.swing.JTextField txtTimKiemSP;
    // End of variables declaration//GEN-END:variables

    private void fillToTableALLSPCT(ArrayList<SanPhamChiTiet> listspct) {
        dtm = (DefaultTableModel) tbSP.getModel();
        dtm.setRowCount(0);
        listspct = spctd.selectAll();
        int size = listspct.size();
        for (int i = 0; i < size; i++) {
            SanPhamChiTiet spct = listspct.get(i);
            Object[] rowData = spct.toDataRowKM(i + 1);
            dtm.addRow(rowData);
        }

    }

    private void searchTable() {
        String keyword = txtTimKiemSP.getText();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(dtm);
        tbSP.setRowSorter(sorter);

        if (keyword.trim().length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + keyword));
        }
    }

    public ArrayList<SanPhamChiTiet> addSPCT() {
        dtm = (DefaultTableModel) tbSP.getModel();
        ArrayList<SanPhamChiTiet> selectedSPCTs = new ArrayList<>();

        for (int i = 0; i < dtm.getRowCount(); i++) {
            boolean tick = (Boolean) tbSP.getValueAt(i, 0);

            if (tick) {
                SanPhamChiTiet spct = listSPCT.get(i);
                selectedSPCTs.add(spct);

                KhuyenMai km = new KhuyenMai();
                km.setId_SPCT(spct.getId());
                list.add(km);

                listSPCT.addAll(spctd.selectAllSPCTTheoMa(spct.getMaCTSP()));

                System.out.println(spct.getMaCTSP());
            }
        }

        return selectedSPCTs;
    }
}
